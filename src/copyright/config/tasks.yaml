task_research_recipe:
  description: >
    Research popular and highly-rated recipes at this moment.
    Use the search tool to find promising recipe ideas.
    Select ONE specific recipe that seems suitable for a blog post.
    Extract its name, a brief description, the main ingredients (list format),
    and a summary of the key preparation steps.
    the input will be : {"action": "put what you want ask to agent here"}.
  expected_output: >
    A concise JSON summary report containing:
    {
      "recipe_name": "The chosen recipe's name",
      "recipe_description": "A brief description of the recipe",
      "main_ingredients": ["List", "of", "main", "ingredients"],
      "preparation_steps": "A short summary of the preparation steps"
    }
  agent: recipe_researcher
  
task_seo_analysis:
  description: >
    Perform an SEO analysis for the recipe identified in the previous step.
    Use the search tool for this analysis. Specifically:
    1. Identify 3-5 primary and secondary SEO keywords relevant to the recipe name and topic.
    2. Find 1-2 top-ranking online articles for this specific recipe.
    3. Briefly analyze the structure (headings, main sections) and key angles 
    (e.g., quick/easy, specific occasion, dietary focus) of these competitor articles.
  expected_output: >
    A report containing:
    1. A list of 3-5 recommended SEO keywords (primary and secondary).
    2. A brief summary of the structure and key angles observed in 1-2 top competitor articles.
  agent: seo_specialist
  context: 
    - task_research_recipe

task_write_recipe:
  description: >
    Using the selected recipe from the previous step, write a detailed and engaging recipe blog post.
    The blog post should include:
      - A catchy title
      - An introductory paragraph that hooks the reader
      - A formatted list of ingredients
      - Step-by-step instructions
      - Optional tips or serving suggestions
  expected_output: >
    A blog article formatted in Markdown, ready to be edited or published.

  agent: recipe_writer
  context:
    - task_seo_analysis 

task_human_editing:
  description: >
    Edit the previously written recipe blog post to improve its tone and flow.
    Make the writing feel more human and natural, like a warm and friendly food blogger.
    Keep the structure but rewrite awkward or robotic parts. Add a bit of personality.
  expected_output: >
    A polished version of the blog article with a more human, friendly, and natural tone.
    Keep the formatting (title, intro, ingredients, steps), but improve transitions, 
    add warmth, and remove stiff language.
  agent: human_editor
  context:
    - task_write_recipe

task_check_plagiarism:
  description: >
    Carefully analyze the content of the blog post provided in the context 
    (usually the output of the writing or editing task).
    1. Select 5 to 7 distinct and representative sentences or passages from the article.
    2. For each selected phrase, use the search tool to find 
       *exact matches* (put the phrase in quotes in the search query).
    3. Clearly report:
        - The exact phrases that were checked.
        - If an exact match was found for a phrase, provide the URL 
          of the matching source if possible.
        - If no exact match was found for a phrase, state this explicitly.
    4. Provide a concise conclusion on the *apparent* risk of plagiarism based 
       on this spot-check.
    5. Briefly remind the user about the necessity of always paraphrasing and citing sources correctly.
    *Explicitly acknowledge in the report that this method is a limited check 
    and only detects direct copy-pasting.*
  expected_output: >
    A JSON object containing:
    1. status: (string, "PLAGIARISM_DETECTED" or "ORIGINALITY_OK")
    2. checked_phrases: (list of strings)
    3. matches_found: (list of objects, each with "phrase" and "url" if match found)
    4. summary: (string, conclusion and reminder)
    Example: {"status": "PLAGIARISM_DETECTED", "checked_phrases": ["..."], "matches_found": [{"phrase":"...", "url":"..."}], "summary": "..."}
  agent: plagiarism_checker
  context:
    - task_write_recipe 

task_manage_article_creation:
  description: >
    Coordinate the full process to create an original, SEO-optimized blog post about the recipe.
    The process involves: 
    1. Delegating research for a trending recipe related to the topic to the recipe_researcher.
    2. Delegating SEO analysis based on the research to the seo_specialist.
    3. Delegating article writing based on research and SEO to the recipe_writer.
    4. Delegating a plagiarism check on the written article to the plagiarism_checker.
    5. **CRITICAL:** Analyze the plagiarism check report. 
       - If 'ORIGINALITY_OK', finalize the process and present the final article.
       - If 'PLAGIARISM_DETECTED', you MUST delegate a rewrite task back to the recipe_writer. Provide the plagiarism feedback clearly. Then, delegate the plagiarism check AGAIN on the rewritten article. Repeat this rewrite/re-check cycle only ONCE if plagiarism persists after the first rewrite.
       - If plagiarism is still detected after the second check, stop the process and report the failure to fix the plagiarism.
    Ensure you receive and manage the outputs from each delegated task to inform the next step.
  expected_output: >
    The final, approved, original blog post in Markdown format, OR a status report indicating 
    that plagiarism issues could not be resolved after the allowed rewrite attempts.
  expected_output: >
    the json format: {"action": "put what you want ask to agent here"}.
  agent: content_quality_manager